//generated by abstract-syntax-gen
package minillvm.ast;
import java.util.*;

public interface TerminatingInstruction extends Instruction, Element{
    Element getParent();
    <T> T match(Matcher<T> s);
    void match(MatcherVoid s);
    public interface Matcher<T> {
        T case_HaltWithError(HaltWithError haltWithError);
        T case_ReturnExpr(ReturnExpr returnExpr);
        T case_Branch(Branch branch);
        T case_ReturnVoid(ReturnVoid returnVoid);
        T case_Jump(Jump jump);
    }

    public interface MatcherVoid {
        void case_HaltWithError(HaltWithError haltWithError);
        void case_ReturnExpr(ReturnExpr returnExpr);
        void case_Branch(Branch branch);
        void case_ReturnVoid(ReturnVoid returnVoid);
        void case_Jump(Jump jump);
    }

    TerminatingInstruction copy();
    TerminatingInstruction copyWithRefs();
    /** */
    public abstract String toString();
}
